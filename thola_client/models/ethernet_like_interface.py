# coding: utf-8

"""
    Thola

    REST API for Thola.  For more information look at our Github : https://github.com/inexio/thola  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from thola_client.configuration import Configuration


class EthernetLikeInterface(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'dot3_hc_stats_fcs_errors': 'int',
        'dot3_stats_alignment_errors': 'int',
        'dot3_stats_carrier_sense_errors': 'int',
        'dot3_stats_deferred_transmissions': 'int',
        'dot3_stats_excessive_collisions': 'int',
        'dot3_stats_fcs_errors': 'int',
        'dot3_stats_frame_too_longs': 'int',
        'dot3_stats_internal_mac_receive_errors': 'int',
        'dot3_stats_internal_mac_transmit_errors': 'int',
        'dot3_stats_late_collisions': 'int',
        'dot3_stats_multiple_collision_frames': 'int',
        'dot3_stats_sqe_test_errors': 'int',
        'dot3_stats_single_collision_frames': 'int',
        'ether_stats_crc_align_errors': 'int'
    }

    attribute_map = {
        'dot3_hc_stats_fcs_errors': 'dot3HCStatsFCSErrors',
        'dot3_stats_alignment_errors': 'dot3StatsAlignmentErrors',
        'dot3_stats_carrier_sense_errors': 'dot3StatsCarrierSenseErrors',
        'dot3_stats_deferred_transmissions': 'dot3StatsDeferredTransmissions',
        'dot3_stats_excessive_collisions': 'dot3StatsExcessiveCollisions',
        'dot3_stats_fcs_errors': 'dot3StatsFCSErrors',
        'dot3_stats_frame_too_longs': 'dot3StatsFrameTooLongs',
        'dot3_stats_internal_mac_receive_errors': 'dot3StatsInternalMacReceiveErrors',
        'dot3_stats_internal_mac_transmit_errors': 'dot3StatsInternalMacTransmitErrors',
        'dot3_stats_late_collisions': 'dot3StatsLateCollisions',
        'dot3_stats_multiple_collision_frames': 'dot3StatsMultipleCollisionFrames',
        'dot3_stats_sqe_test_errors': 'dot3StatsSQETestErrors',
        'dot3_stats_single_collision_frames': 'dot3StatsSingleCollisionFrames',
        'ether_stats_crc_align_errors': 'etherStatsCRCAlignErrors'
    }

    def __init__(self, dot3_hc_stats_fcs_errors=None, dot3_stats_alignment_errors=None, dot3_stats_carrier_sense_errors=None, dot3_stats_deferred_transmissions=None, dot3_stats_excessive_collisions=None, dot3_stats_fcs_errors=None, dot3_stats_frame_too_longs=None, dot3_stats_internal_mac_receive_errors=None, dot3_stats_internal_mac_transmit_errors=None, dot3_stats_late_collisions=None, dot3_stats_multiple_collision_frames=None, dot3_stats_sqe_test_errors=None, dot3_stats_single_collision_frames=None, ether_stats_crc_align_errors=None, _configuration=None):  # noqa: E501
        """EthernetLikeInterface - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._dot3_hc_stats_fcs_errors = None
        self._dot3_stats_alignment_errors = None
        self._dot3_stats_carrier_sense_errors = None
        self._dot3_stats_deferred_transmissions = None
        self._dot3_stats_excessive_collisions = None
        self._dot3_stats_fcs_errors = None
        self._dot3_stats_frame_too_longs = None
        self._dot3_stats_internal_mac_receive_errors = None
        self._dot3_stats_internal_mac_transmit_errors = None
        self._dot3_stats_late_collisions = None
        self._dot3_stats_multiple_collision_frames = None
        self._dot3_stats_sqe_test_errors = None
        self._dot3_stats_single_collision_frames = None
        self._ether_stats_crc_align_errors = None
        self.discriminator = None

        if dot3_hc_stats_fcs_errors is not None:
            self.dot3_hc_stats_fcs_errors = dot3_hc_stats_fcs_errors
        if dot3_stats_alignment_errors is not None:
            self.dot3_stats_alignment_errors = dot3_stats_alignment_errors
        if dot3_stats_carrier_sense_errors is not None:
            self.dot3_stats_carrier_sense_errors = dot3_stats_carrier_sense_errors
        if dot3_stats_deferred_transmissions is not None:
            self.dot3_stats_deferred_transmissions = dot3_stats_deferred_transmissions
        if dot3_stats_excessive_collisions is not None:
            self.dot3_stats_excessive_collisions = dot3_stats_excessive_collisions
        if dot3_stats_fcs_errors is not None:
            self.dot3_stats_fcs_errors = dot3_stats_fcs_errors
        if dot3_stats_frame_too_longs is not None:
            self.dot3_stats_frame_too_longs = dot3_stats_frame_too_longs
        if dot3_stats_internal_mac_receive_errors is not None:
            self.dot3_stats_internal_mac_receive_errors = dot3_stats_internal_mac_receive_errors
        if dot3_stats_internal_mac_transmit_errors is not None:
            self.dot3_stats_internal_mac_transmit_errors = dot3_stats_internal_mac_transmit_errors
        if dot3_stats_late_collisions is not None:
            self.dot3_stats_late_collisions = dot3_stats_late_collisions
        if dot3_stats_multiple_collision_frames is not None:
            self.dot3_stats_multiple_collision_frames = dot3_stats_multiple_collision_frames
        if dot3_stats_sqe_test_errors is not None:
            self.dot3_stats_sqe_test_errors = dot3_stats_sqe_test_errors
        if dot3_stats_single_collision_frames is not None:
            self.dot3_stats_single_collision_frames = dot3_stats_single_collision_frames
        if ether_stats_crc_align_errors is not None:
            self.ether_stats_crc_align_errors = ether_stats_crc_align_errors

    @property
    def dot3_hc_stats_fcs_errors(self):
        """Gets the dot3_hc_stats_fcs_errors of this EthernetLikeInterface.  # noqa: E501


        :return: The dot3_hc_stats_fcs_errors of this EthernetLikeInterface.  # noqa: E501
        :rtype: int
        """
        return self._dot3_hc_stats_fcs_errors

    @dot3_hc_stats_fcs_errors.setter
    def dot3_hc_stats_fcs_errors(self, dot3_hc_stats_fcs_errors):
        """Sets the dot3_hc_stats_fcs_errors of this EthernetLikeInterface.


        :param dot3_hc_stats_fcs_errors: The dot3_hc_stats_fcs_errors of this EthernetLikeInterface.  # noqa: E501
        :type: int
        """

        self._dot3_hc_stats_fcs_errors = dot3_hc_stats_fcs_errors

    @property
    def dot3_stats_alignment_errors(self):
        """Gets the dot3_stats_alignment_errors of this EthernetLikeInterface.  # noqa: E501


        :return: The dot3_stats_alignment_errors of this EthernetLikeInterface.  # noqa: E501
        :rtype: int
        """
        return self._dot3_stats_alignment_errors

    @dot3_stats_alignment_errors.setter
    def dot3_stats_alignment_errors(self, dot3_stats_alignment_errors):
        """Sets the dot3_stats_alignment_errors of this EthernetLikeInterface.


        :param dot3_stats_alignment_errors: The dot3_stats_alignment_errors of this EthernetLikeInterface.  # noqa: E501
        :type: int
        """

        self._dot3_stats_alignment_errors = dot3_stats_alignment_errors

    @property
    def dot3_stats_carrier_sense_errors(self):
        """Gets the dot3_stats_carrier_sense_errors of this EthernetLikeInterface.  # noqa: E501


        :return: The dot3_stats_carrier_sense_errors of this EthernetLikeInterface.  # noqa: E501
        :rtype: int
        """
        return self._dot3_stats_carrier_sense_errors

    @dot3_stats_carrier_sense_errors.setter
    def dot3_stats_carrier_sense_errors(self, dot3_stats_carrier_sense_errors):
        """Sets the dot3_stats_carrier_sense_errors of this EthernetLikeInterface.


        :param dot3_stats_carrier_sense_errors: The dot3_stats_carrier_sense_errors of this EthernetLikeInterface.  # noqa: E501
        :type: int
        """

        self._dot3_stats_carrier_sense_errors = dot3_stats_carrier_sense_errors

    @property
    def dot3_stats_deferred_transmissions(self):
        """Gets the dot3_stats_deferred_transmissions of this EthernetLikeInterface.  # noqa: E501


        :return: The dot3_stats_deferred_transmissions of this EthernetLikeInterface.  # noqa: E501
        :rtype: int
        """
        return self._dot3_stats_deferred_transmissions

    @dot3_stats_deferred_transmissions.setter
    def dot3_stats_deferred_transmissions(self, dot3_stats_deferred_transmissions):
        """Sets the dot3_stats_deferred_transmissions of this EthernetLikeInterface.


        :param dot3_stats_deferred_transmissions: The dot3_stats_deferred_transmissions of this EthernetLikeInterface.  # noqa: E501
        :type: int
        """

        self._dot3_stats_deferred_transmissions = dot3_stats_deferred_transmissions

    @property
    def dot3_stats_excessive_collisions(self):
        """Gets the dot3_stats_excessive_collisions of this EthernetLikeInterface.  # noqa: E501


        :return: The dot3_stats_excessive_collisions of this EthernetLikeInterface.  # noqa: E501
        :rtype: int
        """
        return self._dot3_stats_excessive_collisions

    @dot3_stats_excessive_collisions.setter
    def dot3_stats_excessive_collisions(self, dot3_stats_excessive_collisions):
        """Sets the dot3_stats_excessive_collisions of this EthernetLikeInterface.


        :param dot3_stats_excessive_collisions: The dot3_stats_excessive_collisions of this EthernetLikeInterface.  # noqa: E501
        :type: int
        """

        self._dot3_stats_excessive_collisions = dot3_stats_excessive_collisions

    @property
    def dot3_stats_fcs_errors(self):
        """Gets the dot3_stats_fcs_errors of this EthernetLikeInterface.  # noqa: E501


        :return: The dot3_stats_fcs_errors of this EthernetLikeInterface.  # noqa: E501
        :rtype: int
        """
        return self._dot3_stats_fcs_errors

    @dot3_stats_fcs_errors.setter
    def dot3_stats_fcs_errors(self, dot3_stats_fcs_errors):
        """Sets the dot3_stats_fcs_errors of this EthernetLikeInterface.


        :param dot3_stats_fcs_errors: The dot3_stats_fcs_errors of this EthernetLikeInterface.  # noqa: E501
        :type: int
        """

        self._dot3_stats_fcs_errors = dot3_stats_fcs_errors

    @property
    def dot3_stats_frame_too_longs(self):
        """Gets the dot3_stats_frame_too_longs of this EthernetLikeInterface.  # noqa: E501


        :return: The dot3_stats_frame_too_longs of this EthernetLikeInterface.  # noqa: E501
        :rtype: int
        """
        return self._dot3_stats_frame_too_longs

    @dot3_stats_frame_too_longs.setter
    def dot3_stats_frame_too_longs(self, dot3_stats_frame_too_longs):
        """Sets the dot3_stats_frame_too_longs of this EthernetLikeInterface.


        :param dot3_stats_frame_too_longs: The dot3_stats_frame_too_longs of this EthernetLikeInterface.  # noqa: E501
        :type: int
        """

        self._dot3_stats_frame_too_longs = dot3_stats_frame_too_longs

    @property
    def dot3_stats_internal_mac_receive_errors(self):
        """Gets the dot3_stats_internal_mac_receive_errors of this EthernetLikeInterface.  # noqa: E501


        :return: The dot3_stats_internal_mac_receive_errors of this EthernetLikeInterface.  # noqa: E501
        :rtype: int
        """
        return self._dot3_stats_internal_mac_receive_errors

    @dot3_stats_internal_mac_receive_errors.setter
    def dot3_stats_internal_mac_receive_errors(self, dot3_stats_internal_mac_receive_errors):
        """Sets the dot3_stats_internal_mac_receive_errors of this EthernetLikeInterface.


        :param dot3_stats_internal_mac_receive_errors: The dot3_stats_internal_mac_receive_errors of this EthernetLikeInterface.  # noqa: E501
        :type: int
        """

        self._dot3_stats_internal_mac_receive_errors = dot3_stats_internal_mac_receive_errors

    @property
    def dot3_stats_internal_mac_transmit_errors(self):
        """Gets the dot3_stats_internal_mac_transmit_errors of this EthernetLikeInterface.  # noqa: E501


        :return: The dot3_stats_internal_mac_transmit_errors of this EthernetLikeInterface.  # noqa: E501
        :rtype: int
        """
        return self._dot3_stats_internal_mac_transmit_errors

    @dot3_stats_internal_mac_transmit_errors.setter
    def dot3_stats_internal_mac_transmit_errors(self, dot3_stats_internal_mac_transmit_errors):
        """Sets the dot3_stats_internal_mac_transmit_errors of this EthernetLikeInterface.


        :param dot3_stats_internal_mac_transmit_errors: The dot3_stats_internal_mac_transmit_errors of this EthernetLikeInterface.  # noqa: E501
        :type: int
        """

        self._dot3_stats_internal_mac_transmit_errors = dot3_stats_internal_mac_transmit_errors

    @property
    def dot3_stats_late_collisions(self):
        """Gets the dot3_stats_late_collisions of this EthernetLikeInterface.  # noqa: E501


        :return: The dot3_stats_late_collisions of this EthernetLikeInterface.  # noqa: E501
        :rtype: int
        """
        return self._dot3_stats_late_collisions

    @dot3_stats_late_collisions.setter
    def dot3_stats_late_collisions(self, dot3_stats_late_collisions):
        """Sets the dot3_stats_late_collisions of this EthernetLikeInterface.


        :param dot3_stats_late_collisions: The dot3_stats_late_collisions of this EthernetLikeInterface.  # noqa: E501
        :type: int
        """

        self._dot3_stats_late_collisions = dot3_stats_late_collisions

    @property
    def dot3_stats_multiple_collision_frames(self):
        """Gets the dot3_stats_multiple_collision_frames of this EthernetLikeInterface.  # noqa: E501


        :return: The dot3_stats_multiple_collision_frames of this EthernetLikeInterface.  # noqa: E501
        :rtype: int
        """
        return self._dot3_stats_multiple_collision_frames

    @dot3_stats_multiple_collision_frames.setter
    def dot3_stats_multiple_collision_frames(self, dot3_stats_multiple_collision_frames):
        """Sets the dot3_stats_multiple_collision_frames of this EthernetLikeInterface.


        :param dot3_stats_multiple_collision_frames: The dot3_stats_multiple_collision_frames of this EthernetLikeInterface.  # noqa: E501
        :type: int
        """

        self._dot3_stats_multiple_collision_frames = dot3_stats_multiple_collision_frames

    @property
    def dot3_stats_sqe_test_errors(self):
        """Gets the dot3_stats_sqe_test_errors of this EthernetLikeInterface.  # noqa: E501


        :return: The dot3_stats_sqe_test_errors of this EthernetLikeInterface.  # noqa: E501
        :rtype: int
        """
        return self._dot3_stats_sqe_test_errors

    @dot3_stats_sqe_test_errors.setter
    def dot3_stats_sqe_test_errors(self, dot3_stats_sqe_test_errors):
        """Sets the dot3_stats_sqe_test_errors of this EthernetLikeInterface.


        :param dot3_stats_sqe_test_errors: The dot3_stats_sqe_test_errors of this EthernetLikeInterface.  # noqa: E501
        :type: int
        """

        self._dot3_stats_sqe_test_errors = dot3_stats_sqe_test_errors

    @property
    def dot3_stats_single_collision_frames(self):
        """Gets the dot3_stats_single_collision_frames of this EthernetLikeInterface.  # noqa: E501


        :return: The dot3_stats_single_collision_frames of this EthernetLikeInterface.  # noqa: E501
        :rtype: int
        """
        return self._dot3_stats_single_collision_frames

    @dot3_stats_single_collision_frames.setter
    def dot3_stats_single_collision_frames(self, dot3_stats_single_collision_frames):
        """Sets the dot3_stats_single_collision_frames of this EthernetLikeInterface.


        :param dot3_stats_single_collision_frames: The dot3_stats_single_collision_frames of this EthernetLikeInterface.  # noqa: E501
        :type: int
        """

        self._dot3_stats_single_collision_frames = dot3_stats_single_collision_frames

    @property
    def ether_stats_crc_align_errors(self):
        """Gets the ether_stats_crc_align_errors of this EthernetLikeInterface.  # noqa: E501


        :return: The ether_stats_crc_align_errors of this EthernetLikeInterface.  # noqa: E501
        :rtype: int
        """
        return self._ether_stats_crc_align_errors

    @ether_stats_crc_align_errors.setter
    def ether_stats_crc_align_errors(self, ether_stats_crc_align_errors):
        """Sets the ether_stats_crc_align_errors of this EthernetLikeInterface.


        :param ether_stats_crc_align_errors: The ether_stats_crc_align_errors of this EthernetLikeInterface.  # noqa: E501
        :type: int
        """

        self._ether_stats_crc_align_errors = ether_stats_crc_align_errors

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(EthernetLikeInterface, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, EthernetLikeInterface):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, EthernetLikeInterface):
            return True

        return self.to_dict() != other.to_dict()
