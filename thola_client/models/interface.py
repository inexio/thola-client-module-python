# coding: utf-8

"""
    Thola

    REST API for Thola.  For more information look at our Github : https://github.com/inexio/thola  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from thola_client.configuration import Configuration


class Interface(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'dwdm': 'DWDMInterface',
        'ethernet_like': 'EthernetLikeInterface',
        'if_admin_status': 'Status',
        'if_alias': 'str',
        'if_descr': 'str',
        'if_hc_in_broadcast_pkts': 'int',
        'if_hc_in_multicast_pkts': 'int',
        'if_hc_in_octets': 'int',
        'if_hc_in_ucast_pkts': 'int',
        'if_hc_out_broadcast_pkts': 'int',
        'if_hc_out_multicast_pkts': 'int',
        'if_hc_out_octets': 'int',
        'if_hc_out_ucast_pkts': 'int',
        'if_high_speed': 'int',
        'if_in_broadcast_pkts': 'int',
        'if_in_discards': 'int',
        'if_in_errors': 'int',
        'if_in_multicast_pkts': 'int',
        'if_in_n_ucast_pkts': 'int',
        'if_in_octets': 'int',
        'if_in_ucast_pkts': 'int',
        'if_in_unknown_protos': 'int',
        'if_index': 'int',
        'if_last_change': 'int',
        'if_mtu': 'int',
        'if_name': 'str',
        'if_oper_status': 'Status',
        'if_out_broadcast_pkts': 'int',
        'if_out_discards': 'int',
        'if_out_errors': 'int',
        'if_out_multicast_pkts': 'int',
        'if_out_n_ucast_pkts': 'int',
        'if_out_octets': 'int',
        'if_out_q_len': 'int',
        'if_out_ucast_pkts': 'int',
        'if_phys_address': 'str',
        'if_specific': 'str',
        'if_speed': 'int',
        'if_type': 'str',
        'optical_amplifier': 'OpticalAmplifierInterface',
        'optical_opm': 'OpticalOPMInterface',
        'optical_transponder': 'OpticalTransponderInterface',
        'radio': 'RadioInterface'
    }

    attribute_map = {
        'dwdm': 'dwdm',
        'ethernet_like': 'ethernet_like',
        'if_admin_status': 'ifAdminStatus',
        'if_alias': 'ifAlias',
        'if_descr': 'ifDescr',
        'if_hc_in_broadcast_pkts': 'ifHCInBroadcastPkts',
        'if_hc_in_multicast_pkts': 'ifHCInMulticastPkts',
        'if_hc_in_octets': 'ifHCInOctets',
        'if_hc_in_ucast_pkts': 'ifHCInUcastPkts',
        'if_hc_out_broadcast_pkts': 'ifHCOutBroadcastPkts',
        'if_hc_out_multicast_pkts': 'ifHCOutMulticastPkts',
        'if_hc_out_octets': 'ifHCOutOctets',
        'if_hc_out_ucast_pkts': 'ifHCOutUcastPkts',
        'if_high_speed': 'ifHighSpeed',
        'if_in_broadcast_pkts': 'ifInBroadcastPkts',
        'if_in_discards': 'ifInDiscards',
        'if_in_errors': 'ifInErrors',
        'if_in_multicast_pkts': 'ifInMulticastPkts',
        'if_in_n_ucast_pkts': 'ifInNUcastPkts',
        'if_in_octets': 'ifInOctets',
        'if_in_ucast_pkts': 'ifInUcastPkts',
        'if_in_unknown_protos': 'ifInUnknownProtos',
        'if_index': 'ifIndex',
        'if_last_change': 'ifLastChange',
        'if_mtu': 'ifMtu',
        'if_name': 'ifName',
        'if_oper_status': 'ifOperStatus',
        'if_out_broadcast_pkts': 'ifOutBroadcastPkts',
        'if_out_discards': 'ifOutDiscards',
        'if_out_errors': 'ifOutErrors',
        'if_out_multicast_pkts': 'ifOutMulticastPkts',
        'if_out_n_ucast_pkts': 'ifOutNUcastPkts',
        'if_out_octets': 'ifOutOctets',
        'if_out_q_len': 'ifOutQLen',
        'if_out_ucast_pkts': 'ifOutUcastPkts',
        'if_phys_address': 'ifPhysAddress',
        'if_specific': 'ifSpecific',
        'if_speed': 'ifSpeed',
        'if_type': 'ifType',
        'optical_amplifier': 'optical_amplifier',
        'optical_opm': 'optical_opm',
        'optical_transponder': 'optical_transponder',
        'radio': 'radio'
    }

    def __init__(self, dwdm=None, ethernet_like=None, if_admin_status=None, if_alias=None, if_descr=None, if_hc_in_broadcast_pkts=None, if_hc_in_multicast_pkts=None, if_hc_in_octets=None, if_hc_in_ucast_pkts=None, if_hc_out_broadcast_pkts=None, if_hc_out_multicast_pkts=None, if_hc_out_octets=None, if_hc_out_ucast_pkts=None, if_high_speed=None, if_in_broadcast_pkts=None, if_in_discards=None, if_in_errors=None, if_in_multicast_pkts=None, if_in_n_ucast_pkts=None, if_in_octets=None, if_in_ucast_pkts=None, if_in_unknown_protos=None, if_index=None, if_last_change=None, if_mtu=None, if_name=None, if_oper_status=None, if_out_broadcast_pkts=None, if_out_discards=None, if_out_errors=None, if_out_multicast_pkts=None, if_out_n_ucast_pkts=None, if_out_octets=None, if_out_q_len=None, if_out_ucast_pkts=None, if_phys_address=None, if_specific=None, if_speed=None, if_type=None, optical_amplifier=None, optical_opm=None, optical_transponder=None, radio=None, _configuration=None):  # noqa: E501
        """Interface - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._dwdm = None
        self._ethernet_like = None
        self._if_admin_status = None
        self._if_alias = None
        self._if_descr = None
        self._if_hc_in_broadcast_pkts = None
        self._if_hc_in_multicast_pkts = None
        self._if_hc_in_octets = None
        self._if_hc_in_ucast_pkts = None
        self._if_hc_out_broadcast_pkts = None
        self._if_hc_out_multicast_pkts = None
        self._if_hc_out_octets = None
        self._if_hc_out_ucast_pkts = None
        self._if_high_speed = None
        self._if_in_broadcast_pkts = None
        self._if_in_discards = None
        self._if_in_errors = None
        self._if_in_multicast_pkts = None
        self._if_in_n_ucast_pkts = None
        self._if_in_octets = None
        self._if_in_ucast_pkts = None
        self._if_in_unknown_protos = None
        self._if_index = None
        self._if_last_change = None
        self._if_mtu = None
        self._if_name = None
        self._if_oper_status = None
        self._if_out_broadcast_pkts = None
        self._if_out_discards = None
        self._if_out_errors = None
        self._if_out_multicast_pkts = None
        self._if_out_n_ucast_pkts = None
        self._if_out_octets = None
        self._if_out_q_len = None
        self._if_out_ucast_pkts = None
        self._if_phys_address = None
        self._if_specific = None
        self._if_speed = None
        self._if_type = None
        self._optical_amplifier = None
        self._optical_opm = None
        self._optical_transponder = None
        self._radio = None
        self.discriminator = None

        if dwdm is not None:
            self.dwdm = dwdm
        if ethernet_like is not None:
            self.ethernet_like = ethernet_like
        if if_admin_status is not None:
            self.if_admin_status = if_admin_status
        if if_alias is not None:
            self.if_alias = if_alias
        if if_descr is not None:
            self.if_descr = if_descr
        if if_hc_in_broadcast_pkts is not None:
            self.if_hc_in_broadcast_pkts = if_hc_in_broadcast_pkts
        if if_hc_in_multicast_pkts is not None:
            self.if_hc_in_multicast_pkts = if_hc_in_multicast_pkts
        if if_hc_in_octets is not None:
            self.if_hc_in_octets = if_hc_in_octets
        if if_hc_in_ucast_pkts is not None:
            self.if_hc_in_ucast_pkts = if_hc_in_ucast_pkts
        if if_hc_out_broadcast_pkts is not None:
            self.if_hc_out_broadcast_pkts = if_hc_out_broadcast_pkts
        if if_hc_out_multicast_pkts is not None:
            self.if_hc_out_multicast_pkts = if_hc_out_multicast_pkts
        if if_hc_out_octets is not None:
            self.if_hc_out_octets = if_hc_out_octets
        if if_hc_out_ucast_pkts is not None:
            self.if_hc_out_ucast_pkts = if_hc_out_ucast_pkts
        if if_high_speed is not None:
            self.if_high_speed = if_high_speed
        if if_in_broadcast_pkts is not None:
            self.if_in_broadcast_pkts = if_in_broadcast_pkts
        if if_in_discards is not None:
            self.if_in_discards = if_in_discards
        if if_in_errors is not None:
            self.if_in_errors = if_in_errors
        if if_in_multicast_pkts is not None:
            self.if_in_multicast_pkts = if_in_multicast_pkts
        if if_in_n_ucast_pkts is not None:
            self.if_in_n_ucast_pkts = if_in_n_ucast_pkts
        if if_in_octets is not None:
            self.if_in_octets = if_in_octets
        if if_in_ucast_pkts is not None:
            self.if_in_ucast_pkts = if_in_ucast_pkts
        if if_in_unknown_protos is not None:
            self.if_in_unknown_protos = if_in_unknown_protos
        if if_index is not None:
            self.if_index = if_index
        if if_last_change is not None:
            self.if_last_change = if_last_change
        if if_mtu is not None:
            self.if_mtu = if_mtu
        if if_name is not None:
            self.if_name = if_name
        if if_oper_status is not None:
            self.if_oper_status = if_oper_status
        if if_out_broadcast_pkts is not None:
            self.if_out_broadcast_pkts = if_out_broadcast_pkts
        if if_out_discards is not None:
            self.if_out_discards = if_out_discards
        if if_out_errors is not None:
            self.if_out_errors = if_out_errors
        if if_out_multicast_pkts is not None:
            self.if_out_multicast_pkts = if_out_multicast_pkts
        if if_out_n_ucast_pkts is not None:
            self.if_out_n_ucast_pkts = if_out_n_ucast_pkts
        if if_out_octets is not None:
            self.if_out_octets = if_out_octets
        if if_out_q_len is not None:
            self.if_out_q_len = if_out_q_len
        if if_out_ucast_pkts is not None:
            self.if_out_ucast_pkts = if_out_ucast_pkts
        if if_phys_address is not None:
            self.if_phys_address = if_phys_address
        if if_specific is not None:
            self.if_specific = if_specific
        if if_speed is not None:
            self.if_speed = if_speed
        if if_type is not None:
            self.if_type = if_type
        if optical_amplifier is not None:
            self.optical_amplifier = optical_amplifier
        if optical_opm is not None:
            self.optical_opm = optical_opm
        if optical_transponder is not None:
            self.optical_transponder = optical_transponder
        if radio is not None:
            self.radio = radio

    @property
    def dwdm(self):
        """Gets the dwdm of this Interface.  # noqa: E501


        :return: The dwdm of this Interface.  # noqa: E501
        :rtype: DWDMInterface
        """
        return self._dwdm

    @dwdm.setter
    def dwdm(self, dwdm):
        """Sets the dwdm of this Interface.


        :param dwdm: The dwdm of this Interface.  # noqa: E501
        :type: DWDMInterface
        """

        self._dwdm = dwdm

    @property
    def ethernet_like(self):
        """Gets the ethernet_like of this Interface.  # noqa: E501


        :return: The ethernet_like of this Interface.  # noqa: E501
        :rtype: EthernetLikeInterface
        """
        return self._ethernet_like

    @ethernet_like.setter
    def ethernet_like(self, ethernet_like):
        """Sets the ethernet_like of this Interface.


        :param ethernet_like: The ethernet_like of this Interface.  # noqa: E501
        :type: EthernetLikeInterface
        """

        self._ethernet_like = ethernet_like

    @property
    def if_admin_status(self):
        """Gets the if_admin_status of this Interface.  # noqa: E501


        :return: The if_admin_status of this Interface.  # noqa: E501
        :rtype: Status
        """
        return self._if_admin_status

    @if_admin_status.setter
    def if_admin_status(self, if_admin_status):
        """Sets the if_admin_status of this Interface.


        :param if_admin_status: The if_admin_status of this Interface.  # noqa: E501
        :type: Status
        """

        self._if_admin_status = if_admin_status

    @property
    def if_alias(self):
        """Gets the if_alias of this Interface.  # noqa: E501


        :return: The if_alias of this Interface.  # noqa: E501
        :rtype: str
        """
        return self._if_alias

    @if_alias.setter
    def if_alias(self, if_alias):
        """Sets the if_alias of this Interface.


        :param if_alias: The if_alias of this Interface.  # noqa: E501
        :type: str
        """

        self._if_alias = if_alias

    @property
    def if_descr(self):
        """Gets the if_descr of this Interface.  # noqa: E501


        :return: The if_descr of this Interface.  # noqa: E501
        :rtype: str
        """
        return self._if_descr

    @if_descr.setter
    def if_descr(self, if_descr):
        """Sets the if_descr of this Interface.


        :param if_descr: The if_descr of this Interface.  # noqa: E501
        :type: str
        """

        self._if_descr = if_descr

    @property
    def if_hc_in_broadcast_pkts(self):
        """Gets the if_hc_in_broadcast_pkts of this Interface.  # noqa: E501


        :return: The if_hc_in_broadcast_pkts of this Interface.  # noqa: E501
        :rtype: int
        """
        return self._if_hc_in_broadcast_pkts

    @if_hc_in_broadcast_pkts.setter
    def if_hc_in_broadcast_pkts(self, if_hc_in_broadcast_pkts):
        """Sets the if_hc_in_broadcast_pkts of this Interface.


        :param if_hc_in_broadcast_pkts: The if_hc_in_broadcast_pkts of this Interface.  # noqa: E501
        :type: int
        """

        self._if_hc_in_broadcast_pkts = if_hc_in_broadcast_pkts

    @property
    def if_hc_in_multicast_pkts(self):
        """Gets the if_hc_in_multicast_pkts of this Interface.  # noqa: E501


        :return: The if_hc_in_multicast_pkts of this Interface.  # noqa: E501
        :rtype: int
        """
        return self._if_hc_in_multicast_pkts

    @if_hc_in_multicast_pkts.setter
    def if_hc_in_multicast_pkts(self, if_hc_in_multicast_pkts):
        """Sets the if_hc_in_multicast_pkts of this Interface.


        :param if_hc_in_multicast_pkts: The if_hc_in_multicast_pkts of this Interface.  # noqa: E501
        :type: int
        """

        self._if_hc_in_multicast_pkts = if_hc_in_multicast_pkts

    @property
    def if_hc_in_octets(self):
        """Gets the if_hc_in_octets of this Interface.  # noqa: E501


        :return: The if_hc_in_octets of this Interface.  # noqa: E501
        :rtype: int
        """
        return self._if_hc_in_octets

    @if_hc_in_octets.setter
    def if_hc_in_octets(self, if_hc_in_octets):
        """Sets the if_hc_in_octets of this Interface.


        :param if_hc_in_octets: The if_hc_in_octets of this Interface.  # noqa: E501
        :type: int
        """

        self._if_hc_in_octets = if_hc_in_octets

    @property
    def if_hc_in_ucast_pkts(self):
        """Gets the if_hc_in_ucast_pkts of this Interface.  # noqa: E501


        :return: The if_hc_in_ucast_pkts of this Interface.  # noqa: E501
        :rtype: int
        """
        return self._if_hc_in_ucast_pkts

    @if_hc_in_ucast_pkts.setter
    def if_hc_in_ucast_pkts(self, if_hc_in_ucast_pkts):
        """Sets the if_hc_in_ucast_pkts of this Interface.


        :param if_hc_in_ucast_pkts: The if_hc_in_ucast_pkts of this Interface.  # noqa: E501
        :type: int
        """

        self._if_hc_in_ucast_pkts = if_hc_in_ucast_pkts

    @property
    def if_hc_out_broadcast_pkts(self):
        """Gets the if_hc_out_broadcast_pkts of this Interface.  # noqa: E501


        :return: The if_hc_out_broadcast_pkts of this Interface.  # noqa: E501
        :rtype: int
        """
        return self._if_hc_out_broadcast_pkts

    @if_hc_out_broadcast_pkts.setter
    def if_hc_out_broadcast_pkts(self, if_hc_out_broadcast_pkts):
        """Sets the if_hc_out_broadcast_pkts of this Interface.


        :param if_hc_out_broadcast_pkts: The if_hc_out_broadcast_pkts of this Interface.  # noqa: E501
        :type: int
        """

        self._if_hc_out_broadcast_pkts = if_hc_out_broadcast_pkts

    @property
    def if_hc_out_multicast_pkts(self):
        """Gets the if_hc_out_multicast_pkts of this Interface.  # noqa: E501


        :return: The if_hc_out_multicast_pkts of this Interface.  # noqa: E501
        :rtype: int
        """
        return self._if_hc_out_multicast_pkts

    @if_hc_out_multicast_pkts.setter
    def if_hc_out_multicast_pkts(self, if_hc_out_multicast_pkts):
        """Sets the if_hc_out_multicast_pkts of this Interface.


        :param if_hc_out_multicast_pkts: The if_hc_out_multicast_pkts of this Interface.  # noqa: E501
        :type: int
        """

        self._if_hc_out_multicast_pkts = if_hc_out_multicast_pkts

    @property
    def if_hc_out_octets(self):
        """Gets the if_hc_out_octets of this Interface.  # noqa: E501


        :return: The if_hc_out_octets of this Interface.  # noqa: E501
        :rtype: int
        """
        return self._if_hc_out_octets

    @if_hc_out_octets.setter
    def if_hc_out_octets(self, if_hc_out_octets):
        """Sets the if_hc_out_octets of this Interface.


        :param if_hc_out_octets: The if_hc_out_octets of this Interface.  # noqa: E501
        :type: int
        """

        self._if_hc_out_octets = if_hc_out_octets

    @property
    def if_hc_out_ucast_pkts(self):
        """Gets the if_hc_out_ucast_pkts of this Interface.  # noqa: E501


        :return: The if_hc_out_ucast_pkts of this Interface.  # noqa: E501
        :rtype: int
        """
        return self._if_hc_out_ucast_pkts

    @if_hc_out_ucast_pkts.setter
    def if_hc_out_ucast_pkts(self, if_hc_out_ucast_pkts):
        """Sets the if_hc_out_ucast_pkts of this Interface.


        :param if_hc_out_ucast_pkts: The if_hc_out_ucast_pkts of this Interface.  # noqa: E501
        :type: int
        """

        self._if_hc_out_ucast_pkts = if_hc_out_ucast_pkts

    @property
    def if_high_speed(self):
        """Gets the if_high_speed of this Interface.  # noqa: E501


        :return: The if_high_speed of this Interface.  # noqa: E501
        :rtype: int
        """
        return self._if_high_speed

    @if_high_speed.setter
    def if_high_speed(self, if_high_speed):
        """Sets the if_high_speed of this Interface.


        :param if_high_speed: The if_high_speed of this Interface.  # noqa: E501
        :type: int
        """

        self._if_high_speed = if_high_speed

    @property
    def if_in_broadcast_pkts(self):
        """Gets the if_in_broadcast_pkts of this Interface.  # noqa: E501


        :return: The if_in_broadcast_pkts of this Interface.  # noqa: E501
        :rtype: int
        """
        return self._if_in_broadcast_pkts

    @if_in_broadcast_pkts.setter
    def if_in_broadcast_pkts(self, if_in_broadcast_pkts):
        """Sets the if_in_broadcast_pkts of this Interface.


        :param if_in_broadcast_pkts: The if_in_broadcast_pkts of this Interface.  # noqa: E501
        :type: int
        """

        self._if_in_broadcast_pkts = if_in_broadcast_pkts

    @property
    def if_in_discards(self):
        """Gets the if_in_discards of this Interface.  # noqa: E501


        :return: The if_in_discards of this Interface.  # noqa: E501
        :rtype: int
        """
        return self._if_in_discards

    @if_in_discards.setter
    def if_in_discards(self, if_in_discards):
        """Sets the if_in_discards of this Interface.


        :param if_in_discards: The if_in_discards of this Interface.  # noqa: E501
        :type: int
        """

        self._if_in_discards = if_in_discards

    @property
    def if_in_errors(self):
        """Gets the if_in_errors of this Interface.  # noqa: E501


        :return: The if_in_errors of this Interface.  # noqa: E501
        :rtype: int
        """
        return self._if_in_errors

    @if_in_errors.setter
    def if_in_errors(self, if_in_errors):
        """Sets the if_in_errors of this Interface.


        :param if_in_errors: The if_in_errors of this Interface.  # noqa: E501
        :type: int
        """

        self._if_in_errors = if_in_errors

    @property
    def if_in_multicast_pkts(self):
        """Gets the if_in_multicast_pkts of this Interface.  # noqa: E501


        :return: The if_in_multicast_pkts of this Interface.  # noqa: E501
        :rtype: int
        """
        return self._if_in_multicast_pkts

    @if_in_multicast_pkts.setter
    def if_in_multicast_pkts(self, if_in_multicast_pkts):
        """Sets the if_in_multicast_pkts of this Interface.


        :param if_in_multicast_pkts: The if_in_multicast_pkts of this Interface.  # noqa: E501
        :type: int
        """

        self._if_in_multicast_pkts = if_in_multicast_pkts

    @property
    def if_in_n_ucast_pkts(self):
        """Gets the if_in_n_ucast_pkts of this Interface.  # noqa: E501


        :return: The if_in_n_ucast_pkts of this Interface.  # noqa: E501
        :rtype: int
        """
        return self._if_in_n_ucast_pkts

    @if_in_n_ucast_pkts.setter
    def if_in_n_ucast_pkts(self, if_in_n_ucast_pkts):
        """Sets the if_in_n_ucast_pkts of this Interface.


        :param if_in_n_ucast_pkts: The if_in_n_ucast_pkts of this Interface.  # noqa: E501
        :type: int
        """

        self._if_in_n_ucast_pkts = if_in_n_ucast_pkts

    @property
    def if_in_octets(self):
        """Gets the if_in_octets of this Interface.  # noqa: E501


        :return: The if_in_octets of this Interface.  # noqa: E501
        :rtype: int
        """
        return self._if_in_octets

    @if_in_octets.setter
    def if_in_octets(self, if_in_octets):
        """Sets the if_in_octets of this Interface.


        :param if_in_octets: The if_in_octets of this Interface.  # noqa: E501
        :type: int
        """

        self._if_in_octets = if_in_octets

    @property
    def if_in_ucast_pkts(self):
        """Gets the if_in_ucast_pkts of this Interface.  # noqa: E501


        :return: The if_in_ucast_pkts of this Interface.  # noqa: E501
        :rtype: int
        """
        return self._if_in_ucast_pkts

    @if_in_ucast_pkts.setter
    def if_in_ucast_pkts(self, if_in_ucast_pkts):
        """Sets the if_in_ucast_pkts of this Interface.


        :param if_in_ucast_pkts: The if_in_ucast_pkts of this Interface.  # noqa: E501
        :type: int
        """

        self._if_in_ucast_pkts = if_in_ucast_pkts

    @property
    def if_in_unknown_protos(self):
        """Gets the if_in_unknown_protos of this Interface.  # noqa: E501


        :return: The if_in_unknown_protos of this Interface.  # noqa: E501
        :rtype: int
        """
        return self._if_in_unknown_protos

    @if_in_unknown_protos.setter
    def if_in_unknown_protos(self, if_in_unknown_protos):
        """Sets the if_in_unknown_protos of this Interface.


        :param if_in_unknown_protos: The if_in_unknown_protos of this Interface.  # noqa: E501
        :type: int
        """

        self._if_in_unknown_protos = if_in_unknown_protos

    @property
    def if_index(self):
        """Gets the if_index of this Interface.  # noqa: E501


        :return: The if_index of this Interface.  # noqa: E501
        :rtype: int
        """
        return self._if_index

    @if_index.setter
    def if_index(self, if_index):
        """Sets the if_index of this Interface.


        :param if_index: The if_index of this Interface.  # noqa: E501
        :type: int
        """

        self._if_index = if_index

    @property
    def if_last_change(self):
        """Gets the if_last_change of this Interface.  # noqa: E501


        :return: The if_last_change of this Interface.  # noqa: E501
        :rtype: int
        """
        return self._if_last_change

    @if_last_change.setter
    def if_last_change(self, if_last_change):
        """Sets the if_last_change of this Interface.


        :param if_last_change: The if_last_change of this Interface.  # noqa: E501
        :type: int
        """

        self._if_last_change = if_last_change

    @property
    def if_mtu(self):
        """Gets the if_mtu of this Interface.  # noqa: E501


        :return: The if_mtu of this Interface.  # noqa: E501
        :rtype: int
        """
        return self._if_mtu

    @if_mtu.setter
    def if_mtu(self, if_mtu):
        """Sets the if_mtu of this Interface.


        :param if_mtu: The if_mtu of this Interface.  # noqa: E501
        :type: int
        """

        self._if_mtu = if_mtu

    @property
    def if_name(self):
        """Gets the if_name of this Interface.  # noqa: E501


        :return: The if_name of this Interface.  # noqa: E501
        :rtype: str
        """
        return self._if_name

    @if_name.setter
    def if_name(self, if_name):
        """Sets the if_name of this Interface.


        :param if_name: The if_name of this Interface.  # noqa: E501
        :type: str
        """

        self._if_name = if_name

    @property
    def if_oper_status(self):
        """Gets the if_oper_status of this Interface.  # noqa: E501


        :return: The if_oper_status of this Interface.  # noqa: E501
        :rtype: Status
        """
        return self._if_oper_status

    @if_oper_status.setter
    def if_oper_status(self, if_oper_status):
        """Sets the if_oper_status of this Interface.


        :param if_oper_status: The if_oper_status of this Interface.  # noqa: E501
        :type: Status
        """

        self._if_oper_status = if_oper_status

    @property
    def if_out_broadcast_pkts(self):
        """Gets the if_out_broadcast_pkts of this Interface.  # noqa: E501


        :return: The if_out_broadcast_pkts of this Interface.  # noqa: E501
        :rtype: int
        """
        return self._if_out_broadcast_pkts

    @if_out_broadcast_pkts.setter
    def if_out_broadcast_pkts(self, if_out_broadcast_pkts):
        """Sets the if_out_broadcast_pkts of this Interface.


        :param if_out_broadcast_pkts: The if_out_broadcast_pkts of this Interface.  # noqa: E501
        :type: int
        """

        self._if_out_broadcast_pkts = if_out_broadcast_pkts

    @property
    def if_out_discards(self):
        """Gets the if_out_discards of this Interface.  # noqa: E501


        :return: The if_out_discards of this Interface.  # noqa: E501
        :rtype: int
        """
        return self._if_out_discards

    @if_out_discards.setter
    def if_out_discards(self, if_out_discards):
        """Sets the if_out_discards of this Interface.


        :param if_out_discards: The if_out_discards of this Interface.  # noqa: E501
        :type: int
        """

        self._if_out_discards = if_out_discards

    @property
    def if_out_errors(self):
        """Gets the if_out_errors of this Interface.  # noqa: E501


        :return: The if_out_errors of this Interface.  # noqa: E501
        :rtype: int
        """
        return self._if_out_errors

    @if_out_errors.setter
    def if_out_errors(self, if_out_errors):
        """Sets the if_out_errors of this Interface.


        :param if_out_errors: The if_out_errors of this Interface.  # noqa: E501
        :type: int
        """

        self._if_out_errors = if_out_errors

    @property
    def if_out_multicast_pkts(self):
        """Gets the if_out_multicast_pkts of this Interface.  # noqa: E501


        :return: The if_out_multicast_pkts of this Interface.  # noqa: E501
        :rtype: int
        """
        return self._if_out_multicast_pkts

    @if_out_multicast_pkts.setter
    def if_out_multicast_pkts(self, if_out_multicast_pkts):
        """Sets the if_out_multicast_pkts of this Interface.


        :param if_out_multicast_pkts: The if_out_multicast_pkts of this Interface.  # noqa: E501
        :type: int
        """

        self._if_out_multicast_pkts = if_out_multicast_pkts

    @property
    def if_out_n_ucast_pkts(self):
        """Gets the if_out_n_ucast_pkts of this Interface.  # noqa: E501


        :return: The if_out_n_ucast_pkts of this Interface.  # noqa: E501
        :rtype: int
        """
        return self._if_out_n_ucast_pkts

    @if_out_n_ucast_pkts.setter
    def if_out_n_ucast_pkts(self, if_out_n_ucast_pkts):
        """Sets the if_out_n_ucast_pkts of this Interface.


        :param if_out_n_ucast_pkts: The if_out_n_ucast_pkts of this Interface.  # noqa: E501
        :type: int
        """

        self._if_out_n_ucast_pkts = if_out_n_ucast_pkts

    @property
    def if_out_octets(self):
        """Gets the if_out_octets of this Interface.  # noqa: E501


        :return: The if_out_octets of this Interface.  # noqa: E501
        :rtype: int
        """
        return self._if_out_octets

    @if_out_octets.setter
    def if_out_octets(self, if_out_octets):
        """Sets the if_out_octets of this Interface.


        :param if_out_octets: The if_out_octets of this Interface.  # noqa: E501
        :type: int
        """

        self._if_out_octets = if_out_octets

    @property
    def if_out_q_len(self):
        """Gets the if_out_q_len of this Interface.  # noqa: E501


        :return: The if_out_q_len of this Interface.  # noqa: E501
        :rtype: int
        """
        return self._if_out_q_len

    @if_out_q_len.setter
    def if_out_q_len(self, if_out_q_len):
        """Sets the if_out_q_len of this Interface.


        :param if_out_q_len: The if_out_q_len of this Interface.  # noqa: E501
        :type: int
        """

        self._if_out_q_len = if_out_q_len

    @property
    def if_out_ucast_pkts(self):
        """Gets the if_out_ucast_pkts of this Interface.  # noqa: E501


        :return: The if_out_ucast_pkts of this Interface.  # noqa: E501
        :rtype: int
        """
        return self._if_out_ucast_pkts

    @if_out_ucast_pkts.setter
    def if_out_ucast_pkts(self, if_out_ucast_pkts):
        """Sets the if_out_ucast_pkts of this Interface.


        :param if_out_ucast_pkts: The if_out_ucast_pkts of this Interface.  # noqa: E501
        :type: int
        """

        self._if_out_ucast_pkts = if_out_ucast_pkts

    @property
    def if_phys_address(self):
        """Gets the if_phys_address of this Interface.  # noqa: E501


        :return: The if_phys_address of this Interface.  # noqa: E501
        :rtype: str
        """
        return self._if_phys_address

    @if_phys_address.setter
    def if_phys_address(self, if_phys_address):
        """Sets the if_phys_address of this Interface.


        :param if_phys_address: The if_phys_address of this Interface.  # noqa: E501
        :type: str
        """

        self._if_phys_address = if_phys_address

    @property
    def if_specific(self):
        """Gets the if_specific of this Interface.  # noqa: E501


        :return: The if_specific of this Interface.  # noqa: E501
        :rtype: str
        """
        return self._if_specific

    @if_specific.setter
    def if_specific(self, if_specific):
        """Sets the if_specific of this Interface.


        :param if_specific: The if_specific of this Interface.  # noqa: E501
        :type: str
        """

        self._if_specific = if_specific

    @property
    def if_speed(self):
        """Gets the if_speed of this Interface.  # noqa: E501


        :return: The if_speed of this Interface.  # noqa: E501
        :rtype: int
        """
        return self._if_speed

    @if_speed.setter
    def if_speed(self, if_speed):
        """Sets the if_speed of this Interface.


        :param if_speed: The if_speed of this Interface.  # noqa: E501
        :type: int
        """

        self._if_speed = if_speed

    @property
    def if_type(self):
        """Gets the if_type of this Interface.  # noqa: E501


        :return: The if_type of this Interface.  # noqa: E501
        :rtype: str
        """
        return self._if_type

    @if_type.setter
    def if_type(self, if_type):
        """Sets the if_type of this Interface.


        :param if_type: The if_type of this Interface.  # noqa: E501
        :type: str
        """

        self._if_type = if_type

    @property
    def optical_amplifier(self):
        """Gets the optical_amplifier of this Interface.  # noqa: E501


        :return: The optical_amplifier of this Interface.  # noqa: E501
        :rtype: OpticalAmplifierInterface
        """
        return self._optical_amplifier

    @optical_amplifier.setter
    def optical_amplifier(self, optical_amplifier):
        """Sets the optical_amplifier of this Interface.


        :param optical_amplifier: The optical_amplifier of this Interface.  # noqa: E501
        :type: OpticalAmplifierInterface
        """

        self._optical_amplifier = optical_amplifier

    @property
    def optical_opm(self):
        """Gets the optical_opm of this Interface.  # noqa: E501


        :return: The optical_opm of this Interface.  # noqa: E501
        :rtype: OpticalOPMInterface
        """
        return self._optical_opm

    @optical_opm.setter
    def optical_opm(self, optical_opm):
        """Sets the optical_opm of this Interface.


        :param optical_opm: The optical_opm of this Interface.  # noqa: E501
        :type: OpticalOPMInterface
        """

        self._optical_opm = optical_opm

    @property
    def optical_transponder(self):
        """Gets the optical_transponder of this Interface.  # noqa: E501


        :return: The optical_transponder of this Interface.  # noqa: E501
        :rtype: OpticalTransponderInterface
        """
        return self._optical_transponder

    @optical_transponder.setter
    def optical_transponder(self, optical_transponder):
        """Sets the optical_transponder of this Interface.


        :param optical_transponder: The optical_transponder of this Interface.  # noqa: E501
        :type: OpticalTransponderInterface
        """

        self._optical_transponder = optical_transponder

    @property
    def radio(self):
        """Gets the radio of this Interface.  # noqa: E501


        :return: The radio of this Interface.  # noqa: E501
        :rtype: RadioInterface
        """
        return self._radio

    @radio.setter
    def radio(self, radio):
        """Sets the radio of this Interface.


        :param radio: The radio of this Interface.  # noqa: E501
        :type: RadioInterface
        """

        self._radio = radio

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(Interface, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, Interface):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, Interface):
            return True

        return self.to_dict() != other.to_dict()
